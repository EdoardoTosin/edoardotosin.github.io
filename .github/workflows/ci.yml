name: Jekyll CI Checks

on:
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write

jobs:
  test:
    name: Build and Test Site
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2.3'
          bundler-cache: true

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5

      - name: Validate Obsidian Sync Content
        if: contains(github.event.pull_request.labels.*.name, 'obsidian-sync')
        run: |
          echo "🔍 Validating Obsidian sync content..."
          
          # Check for any remaining Obsidian artifacts
          if find _posts _notes -name "*.md" -exec grep -l "\[\[.*\]\]" {} \; 2>/dev/null | head -1; then
            echo "⚠️  Warning: Found wiki-links in content. Consider converting to Jekyll links."
          fi
          
          # Validate frontmatter
          for file in _posts/*.md _notes/*.md; do
            if [[ -f "$file" ]]; then
              if ! head -20 "$file" | grep -q "^---"; then
                echo "❌ Missing frontmatter in $file"
                exit 1
              fi
            fi
          done
          
          echo "✅ Obsidian content validation passed"

      - name: Build Jekyll site
        run: |
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}" --verbose
        env:
          JEKYLL_ENV: production

      - name: Test HTML output
        run: |
          # Enhanced validation
          if [ ! -d "_site" ]; then
            echo "❌ Build failed: _site directory not found"
            exit 1
          fi
          
          if [ ! -f "_site/index.html" ]; then
            echo "❌ Build failed: index.html not found"
            exit 1
          fi
          
          # Check for broken internal links in sync content
          if command -v htmlproofer >/dev/null 2>&1; then
            htmlproofer ./_site --internal-domains=localhost:4000 --assume-extension || echo "⚠️  HTML validation warnings found"
          fi
          
          echo "✅ Jekyll site built successfully"
          echo "📊 Site size: $(du -sh _site | cut -f1)"
          echo "📄 Files generated: $(find _site -type f | wc -l)"
          
          # Report on sync content
          if [[ -d "_site/_posts" ]]; then
            echo "📝 Posts: $(find _site/_posts -name "*.html" | wc -l)"
          fi
          if [[ -d "_site/_notes" ]]; then
            echo "📚 Notes: $(find _site/_notes -name "*.html" | wc -l)"
          fi

      - name: Upload build artifact
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: jekyll-site-pr-${{ github.event.number }}
          path: _site/
          retention-days: 7

      - name: Comment PR with Build Info
        if: contains(github.event.pull_request.labels.*.name, 'obsidian-sync')
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            
            // Generate build summary
            const siteSize = require('child_process').execSync('du -sh _site | cut -f1').toString().trim();
            const fileCount = require('child_process').execSync('find _site -type f | wc -l').toString().trim();
            
            const comment = `## 🏗️ Build Summary
            
            ✅ Jekyll site built successfully from Obsidian sync
            
            **Build Stats:**
            - 📊 Site size: ${siteSize}
            - 📄 Files generated: ${fileCount}
            - 🚀 Build time: ~${{ job.steps.build-jekyll-site.duration || 'N/A' }}
            
            **Sync Content:**
            - Posts synced from \`Posts/\` → \`_posts/\`
            - Notes synced from \`Notes/\` → \`_notes/\`
            
            _This comment was automatically generated by the CI workflow._`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });

  alls-green:
    if: always()
    needs: [test]
    runs-on: ubuntu-latest
    timeout-minutes: 2

    steps:
      - name: Ensure all jobs passed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
